{
    "contents" : "# Copyright: Will Schuerman. Monday, October 27th, 2014.\n\n# Initial inspection of see_she_expr production prod.data.\n\n# File Description: Initial examination of production prod.data. \n\n# Packages \n\nrequire(plyr)\nrequire(bear)\n\n# Read in prod.data \n\ntext.files <- dir(\"Production_data/\")\n\nprod.data = data.frame(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,'x', 'x')\nnames(prod.data) <- c('in.f1.25', 'in.f2.25', 'out.f1.25', 'out.f2.25', \n                 'in.f1.50', 'in.f2.50', 'out.f1.50', 'out.f2.50',\n                 'in.f1.75', 'in.f2.75', 'out.f1.75', 'out.f2.75', \n                 'block', 'trial', 'trialb', 'subj', 'session')\nfor(text.file in text.files){\n  tmp <- read.csv(file=paste(\"Production_data/\", text.file, sep=\"\"), header = FALSE)\n  tmp$trial = c(1:nrow(tmp))\n  tmp$trialb = rep(c(1:26), max(tmp$V13)+1)\n  tmp$subj <- substr(x = text.file, start =1, stop = regexpr(pattern = \"_\", text.file)-1)\n  if(length(grep(\"YesPert\", text.file))>0){\n    tmp$session <- \"YesPert\"\n  }else{\n    tmp$session <- \"NoPert\"\n  }\n  names(tmp) <-c('in.f1.25', 'in.f2.25', 'out.f1.25', 'out.f2.25', \n                  'in.f1.50', 'in.f2.50', 'out.f1.50', 'out.f2.50',\n                  'in.f1.75', 'in.f2.75', 'out.f1.75', 'out.f2.75', \n                 'block', 'trial', 'trialb', 'subj', 'session')\n  prod.data <- rbind(prod.data, tmp)\n}\nprod.data = prod.data[-1,]\nprod.data$block = prod.data$block+1\n\n# get rid of NaN trials\n\nprod.data <- prod.data[complete.cases(prod.data),]\n\n# Convert to factors \nprod.data$subj <- factor(prod.data$subj)\nprod.data$session <- factor(prod.data$session)\n\n# restrict data to 50 point markers, don't need the others\n\nprod.data <- prod.data[,c(\"subj\", \"session\", \"block\",\"trialb\",\"trial\",\"in.f1.50\",\"out.f1.50\",\"in.f2.50\",\"out.f2.50\")]\n\n# remove participant 1 and 2 (me and Uncle Dennis)\nprod.data <- prod.data[which(!(prod.data$subj %in% c('S1', 'S2'))),]\nprod.data <- droplevels(prod.data)\n\n\n\n# get rid of s in subject\n\nprod.data$subj <- substr(prod.data$subj, start=2, stop=3)\nprod.data$subj <- factor(prod.data$subj)\n\n\n# remove outliers, by scaling the the inbuffers and outbuffers, and discarding anything greater than 3\n\nprod.data <- ddply(prod.data, c(\"subj\", \"session\"), transform, z.in.f2.50 = scale(in.f2.50))\nprod.data <- ddply(prod.data, c(\"subj\", \"session\"), transform, z.in.f1.50 = scale(in.f1.50))\nboxplot(prod.data$in.f1.50)\nboxplot(prod.data$in.f2.50)\ntotal.cases <- nrow(prod.data)\nprod.data <- prod.data[which(prod.data$z.in.f1.50 < 3 & prod.data$z.in.f1.50 > -3),]\nf1.outliers <- total.cases - nrow(prod.data)\nprod.data <- prod.data[which(prod.data$z.in.f2.50 < 3 & prod.data$z.in.f2.50 > -3),]\nf2.outliers <- total.cases-f1.outliers-nrow(prod.data)\nboxplot(prod.data$in.f1.50)\nboxplot(prod.data$in.f2.50)\nxtabs(~subj+block+session,data=prod.data)\n\n# remove bad measurements in which the F2 is less than 1800\n\n\n# calculate dispersion between f2 and f1\n\nprod.data$in.dispersion <- prod.data$in.f2.50 - prod.data$in.f1.50\nprod.data$out.dispersion <- prod.data$out.f2.50 - prod.data$out.f1.50\nprod.data <- ddply(prod.data, c(\"subj\", \"session\"), transform, z.in.dispersion = scale(in.dispersion))\n\n\n# calculate difference between inbuffer and outbuffer. This is the shift amount. \n\nprod.data$shift.f1.50 <- prod.data$out.f1.50 - prod.data$in.f1.50\nprod.data$shift.f2.50 <- prod.data$out.f2.50 - prod.data$in.f2.50\nprod.data$shift.dispersion <- prod.data$out.dispersion - prod.data$in.dispersion\n\n# calculate baselines as average F1 and F2 in the first block.\n\n\nprod.data$baseline.f1.50 <- 0\nprod.data$baseline.f2.50 <- 0\nprod.data$baseline.dispersion <- 0\nfor(session in levels(prod.data$session)){\n  for(subj in levels(prod.data$subj)){\n    prod.data$baseline.f1.50[which(prod.data$session==session & prod.data$subj==subj)] <- mean(prod.data[which(prod.data$session==session & prod.data$subj==subj),'in.f1.50'][which(prod.data$block==1)], na.rm=T)\n    prod.data$baseline.f2.50[which(prod.data$session==session & prod.data$subj==subj)] <- mean(prod.data[which(prod.data$session==session & prod.data$subj==subj),'in.f2.50'][which(prod.data$block==1)], na.rm=T)\n    prod.data$baseline.dispersion[which(prod.data$session==session & prod.data$subj==subj)] <- mean(prod.data[which(prod.data$session==session & prod.data$subj==subj),'in.dispersion'][which(prod.data$block==1)], na.rm=T)\n  }\n}\n\n\n\n# calculate compensation as inbuffer - baseline / difference between inbuffer and outbuffer\n\nprod.data$compensation.f1.50 <- (prod.data$in.f1.50 - prod.data$baseline.f1.50) / prod.data$shift.f1.50\nprod.data$compensation.f2.50 <- (prod.data$in.f2.50 - prod.data$baseline.f2.50) / prod.data$shift.f2.50\nprod.data$compensation.dispersion <- (prod.data$in.dispersion - prod.data$baseline.dispersion)\n\n\n# center and measure averages\n\nprod.summarized.data <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, mean(in.f1.50, na.rm=T) )\nprod.summarized.data2 <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, mean(in.f2.50, na.rm=T) )\nprod.summarized.data3 <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, mean(in.dispersion, na.rm=T) )\nnames(prod.summarized.data) <- c(\"subj\", \"block\", \"session\", \"ave.in.f1.50\")\nnames(prod.summarized.data2) <- c(\"subj\", \"block\", \"session\", \"ave.in.f2.50\")\nnames(prod.summarized.data3) <- c(\"subj\", \"block\", \"session\", \"ave.in.dispersion\")\nprod.summarized.data$ave.in.f2.50 <- prod.summarized.data2$ave.in.f2.50\nprod.summarized.data$ave.in.dispersion <- prod.summarized.data3$ave.in.dispersion\nrm(prod.summarized.data2, prod.summarized.data3)\n\n\nprod.summarized.data2 <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, sd(in.f1.50, na.rm=T) )\nprod.summarized.data3 <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, sd(in.f2.50, na.rm=T) )\nprod.summarized.data4 <- ddply(prod.data, c(\"subj\", \"block\", \"session\"), summarise, sd(in.dispersion, na.rm=T) )\nnames(prod.summarized.data2) <- c(\"subj\", \"block\", \"session\", \"sd.in.f1.50\")\nnames(prod.summarized.data3) <- c(\"subj\", \"block\", \"session\", \"sd.in.f2.50\")\nnames(prod.summarized.data4) <- c(\"subj\", \"block\", \"session\", \"sd.in.dispersion\")\nprod.summarized.data$sd.in.f1.50 <- prod.summarized.data2$sd.in.f1.50\nprod.summarized.data$sd.in.f2.50 <- prod.summarized.data3$sd.in.f2.50\nprod.summarized.data$sd.in.dispersion <- prod.summarized.data4$sd.in.dispersion\nrm(prod.summarized.data2, prod.summarized.data3, prod.summarized.data4)\n\n\n\n\n\n#\nprod.summarized.data <- ddply(prod.summarized.data, c(\"subj\", \"session\"), transform, centered.in.f1.50 = ave.in.f1.50-ave.in.f1.50[which(block==1)])\n\nprod.summarized.data <- ddply(prod.summarized.data, c(\"subj\", \"session\"), transform, centered.in.f2.50 = ave.in.f2.50-ave.in.f2.50[which(block==1)])\n\nprod.summarized.data <- ddply(prod.summarized.data, c(\"subj\", \"session\"), transform, centered.in.dispersion = ave.in.dispersion-ave.in.dispersion[which(block==1)])\n\n\n\n# measure centered f1 and f2 as a proportion of standard deviations in block 1. \n\nprod.summarized.data$test.f1 <- prod.summarized.data$centered.in.f1.50 / prod.summarized.data$sd.in.f1.50\nprod.summarized.data$test.f2 <- prod.summarized.data$centered.in.f2.50 / prod.summarized.data$sd.in.f2.50\n\n\n\n# set proportion of block 1 to 0 for each session, and see how boundary changes over time.\nprod.summarized.data$change.in.f1.50 <- 0\nfor(session in levels(prod.summarized.data$session)){\n  for(subj in levels(prod.summarized.data$subj)){\n    for(block in c(2:6)){\n      if(length(prod.summarized.data$ave.in.f1.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]) >0){\n        tmp.prop <- prod.summarized.data$ave.in.f1.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]\n        tmp.prop.2 <- prod.summarized.data$ave.in.f1.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block-1)]\n        prod.summarized.data$change.in.f1.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)] <- tmp.prop.2 - tmp.prop\n      }\n    }\n  }\n}\n\n\nprod.summarized.data$change.in.f2.50 <- 0\nfor(session in levels(prod.summarized.data$session)){\n  for(subj in levels(prod.summarized.data$subj)){\n    for(block in c(2:6)){\n      if(length(prod.summarized.data$ave.in.f2.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]) >0){\n        tmp.prop <- prod.summarized.data$ave.in.f2.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]\n        tmp.prop.2 <- prod.summarized.data$ave.in.f2.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block-1)]\n        prod.summarized.data$change.in.f2.50[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)] <- tmp.prop.2 - tmp.prop\n      }\n    }\n  }\n}\n\n\nprod.summarized.data$change.in.dispersion <- 0\nfor(session in levels(prod.summarized.data$session)){\n  for(subj in levels(prod.summarized.data$subj)){\n    for(block in c(2:6)){\n      if(length(prod.summarized.data$ave.in.dispersion[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]) >0){\n        tmp.prop <- prod.summarized.data$ave.in.dispersion[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)]\n        tmp.prop.2 <- prod.summarized.data$ave.in.dispersion[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block-1)]\n        prod.summarized.data$change.in.dispersion[which(prod.summarized.data$session==session & prod.summarized.data$subj==subj & prod.summarized.data$block==block)] <- tmp.prop.2 - tmp.prop\n      }\n    }\n  }\n}\n\n\n# checking density \n\n\n\n\n\np1 <- ggplot(prod.data, aes(x=in.f2.50, fill=subj))+\n  geom_density(alpha=.2)\n\np2 <- ggplot(prod.data, aes(x=in.f2.50, fill=session))+\n  geom_density(alpha=.2)\n\np2 <- ggplot(prod.data[prod.data$subj==7,], aes(x=in.f2.50, fill=session))+\n  geom_density(alpha=.2)\n\n\nd.summary <- summarySE(prod.data[which(!(prod.data$subj %in% c(3,4,5,24,25,26))),], measurevar=\"in.dispersion\", groupvars=c(\"session\", \"block\"))\nggplot(d.summary, aes(x=as.factor(block), y=in.dispersion, colour=session,group=session))+\n  geom_line()+\n  geom_point()+  geom_errorbar(aes(ymin=in.dispersion-se, ymax=in.dispersion+se),\n                               width=.2)              # Width of the error bars\n\n\n\nd.summary <- summarySE(prod.data[which(!(prod.data$subj %in% c(3,4,5,24,25,26))),], measurevar=\"in.f2.50\", groupvars=c(\"session\", \"block\"))\nggplot(d.summary, aes(x=as.factor(block), y=in.f2.50, colour=session,group=session))+\n  geom_line()+\n  geom_point()+  geom_errorbar(aes(ymin=in.f2.50-se, ymax=in.f2.50+se),\n                               width=.2)              # Width of the error bars\n\n\nd.summary <- summarySE(prod.data[which(!(prod.data$subj %in% c(3,4,5,24,25,26))),], measurevar=\"in.f1.50\", groupvars=c(\"session\", \"block\"))\nggplot(d.summary, aes(x=as.factor(block), y=in.f1.50, colour=session,group=session))+\n  geom_line()+\n  geom_point()+  geom_errorbar(aes(ymin=in.f1.50-se, ymax=in.f1.50+se),\n                               width=.2)              # Width of the error bars\n\n\nd.summary <- summarySE(ident.summarized.data, measurevar=\"proportion\", groupvars=c(\"session\", \"block\"))\nggplot(d.summary, aes(x=as.factor(block), y=proportion, colour=session,group=session))+\n  geom_line()+\n  geom_point()+  geom_errorbar(aes(ymin=proportion-se, ymax=proportion+se),\n                               width=.2)              # Width of the error bars\n\n\n\n\nd.summary <- summarySE(ident.summarized.data, measurevar=\"centered.proportion\", groupvars=c(\"session\", \"block\"))\nggplot(d.summary, aes(x=as.factor(block), y=centered.proportion, colour=session,group=session))+\n  geom_line()+\n  geom_point()+  geom_errorbar(aes(ymin=centered.proportion-se, ymax=centered.proportion+se),\n                               width=.2)              # Width of the error bars\n\n\n",
    "created" : 1414403110431.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1013426857",
    "id" : "D02B7BF4",
    "lastKnownWriteTime" : 1416583393,
    "path" : "U:/Projects/git_projects/see_she_expr/see_she_expr_analysis_1/production_data_initial_inspection.R",
    "project_path" : "production_data_initial_inspection.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}